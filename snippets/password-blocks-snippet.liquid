{%- case block.type -%}
  {%- when 'text' -%}
    {%- for i in (1..4) -%}
      {%- assign tempo_text = 'text_' | append: i -%}

      {%- unless block.settings[tempo_text] == blank -%}
        {%- capture textID -%}{{blockID}} .text-{{i}}{%- endcapture -%}
        {%- assign tempo_text_fw         = 'text_fw_'           | append: i -%}
        {%- assign tempo_text_color      = 'text_color_'        | append: i -%}
        {%- assign tempo_text_color_opa  = 'text_opacity_'      | append: i -%}
        {%- assign tempo_text_fs         = 'text_fs_'           | append: i -%}
        {%- assign tempo_text_mb         = 'text_margin_'       | append: i -%}
        {%- assign tempo_text_lsp        = 'text_lsp_'          | append: i -%}
        {%- assign tempo_text_lh         = 'text_lh_'           | append: i -%}
        {%- assign tempo_text_up         = 'text_up_'           | append: i -%}

        {%- assign slide_txt_color      = block.settings[tempo_text_color] | default: 'rgba(0,0,0,0)' -%}
        {%- assign slide_txt_color_opa  = block.settings[tempo_text_color_opa] | times: 0.01 -%}

        {%- if slide_txt_color_opa < 1 and slide_txt_color != 'rgba(0,0,0,0)' -%}
          {%- assign slide_txt_color = block.settings[tempo_text_color] | color_modify: 'alpha', slide_txt_color_opa -%}
        {%- endif -%}

        <div class="text-{{i}} fw-{{block.settings[tempo_text_fw]}}{% if block.settings[tempo_text_up] %} text-uppercase{% endif %}">
          <span>{{- block.settings[tempo_text] -}}</span>
        </div>


        {%- capture text_single_css -%}color:{{slide_txt_color}};{%- endcapture -%}
        {%- capture block_css -%}
          {%- include 'css-responsive', classID: textID ,css_values: text_single_css -%}
          {%- include 'css-responsive', classID: textID ,css_value:  block.settings[tempo_text_fs]  ,css_property: 'font-size' -%}
          {%- include 'css-responsive', classID: textID ,css_value:  block.settings[tempo_text_mb]  ,css_property: 'margin' -%}
          {%- include 'css-responsive', classID: textID ,css_value:  block.settings[tempo_text_lsp] ,css_property: 'letter-spacing' -%}
          {%- include 'css-responsive', classID: textID ,css_value:  block.settings[tempo_text_lh]  ,css_property: 'line-height' -%}
        {%- endcapture -%}
        {%- assign section_css = section_css | append: block_css -%}
      {%- endunless -%}
    {%- endfor -%}

  {%- when 'countdown' -%}
    {%- assign _countDownStyle = block.settings.countdown_style -%}
    {%- assign _cd_color_1     = block.settings.color_1 | default: 'rgba(0,0,0,0)' -%}
    {%- assign _cd_color_2     = block.settings.color_2 | default: 'rgba(0,0,0,0)' -%}

    <div class="countdown-content countdown-style-{{_countDownStyle}}">
      {%- include 'include-countdown', countdown: block.settings.countdown_date, countdown_id: block.id -%}

      {%- if _countDownStyle == 2 -%}
        <div class="countdown-canvas d-flex flex-wrap" data-color-1="{{_cd_color_1}}" data-color-2="{{_cd_color_2}}">

          <div class="canvas-wrap canvas-days" data-id="days-{{block.id}}" data-per="24">
            <canvas id="canvas-days-{{block.id}}" width="156" height="156"></canvas>
            <span id="procent-days-{{block.id}}" class="canvas-content text-center">
              <span class="date-number"></span>
              <span class="text-date"></span>
            </span>
          </div>

          <div class="canvas-wrap canvas-hours" data-id="hours-{{block.id}}" data-per="60">
            <canvas id="canvas-hours-{{block.id}}" width="156" height="156"></canvas>
            <span id="procent-hours-{{block.id}}" class="canvas-content text-center">
              <span class="date-number"></span>
              <span class="text-date"></span>
            </span>
          </div>

          <div class="canvas-wrap canvas-mins" data-id="mins-{{block.id}}" data-per="60">
            <canvas id="canvas-mins-{{block.id}}" width="156" height="156"></canvas>
            <span id="procent-mins-{{block.id}}" class="canvas-content text-center">
              <span class="date-number"></span>
              <span class="text-date"></span>
            </span>
          </div>

          <div class="canvas-wrap canvas-secs" data-id="secs-{{block.id}}" data-per="60">
            <canvas id="canvas-secs-{{block.id}}" width="156" height="156"></canvas>
            <span id="procent-secs-{{block.id}}" class="canvas-content text-center">
              <span class="date-number"></span>
              <span class="text-date"></span>
            </span>
          </div>
        </div>
      {%- endif -%}
    </div>

    {%- capture block_css -%}
      {%- include 'css-responsive', classID: blockID , nextClassID: ' .date-number' ,css_value:  block.settings.time_fs ,css_property: 'font-size' -%}
      {%- include 'css-responsive', classID: blockID , nextClassID: ' .text-date'   ,css_value:  block.settings.date_fs ,css_property: 'font-size' -%}
      {{- blockID}} .date-number{ color: {{block.settings.time_cl | default: 'rgba(0,0,0,0)'}};font-weight: {{block.settings.time_fw}};}
      {{- blockID}} .text-date{ color: {{block.settings.date_cl | default: 'rgba(0,0,0,0)'}};font-weight: {{block.settings.date_fw}};}
      {{- blockID}} .countdown-content.countdown-style-3 .wrapper-countdown > div > span{border-color: {{_cd_color_1}};}
      {%- if _countDownStyle == 2 -%}
        {{- blockID}} .countdown-canvas .canvas-wrap{position: relative;}
        {{- blockID}} .countdown-canvas .canvas-content{position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);}
        {%- capture block_align -%}{{block.settings.alignment | replace: 'left','flex-start' | replace: 'right','flex-end' }}{%- endcapture -%}
        {%- include 'css-responsive', classID: blockID , nextClassID: ' .countdown-canvas' ,css_value: block_align ,css_property: 'justify-content' -%}
      {%- endif -%}
    {%- endcapture -%}
    {%- assign section_css = section_css | append: block_css -%}

  {%- when 'logo' -%}
    <div class="block-logo">
      {%- include 'include-logo' with type: 'block' -%}
    </div>

  {%- when 'separator' -%}
    {%- capture block_css -%}
      {%- include 'css-responsive', classID: blockID ,nextClassID: ' > div' ,css_value: block.settings.height ,css_property: 'height' -%}
    {%- endcapture -%}
    {%- assign section_css = section_css | append: block_css -%}

  {%- when 'social_group' -%}
    {%- capture icon_group_align -%}justify-content-{{block.settings.alignment | replace: 'left','start' | replace: 'right','end' }}{%- endcapture -%}
    <div class="social-group d-flex {{icon_group_align}}">
        {%- for i in (1..5) -%}
            {%- assign temp_soc_icon = 'soc_icon_' | append: i -%}
            {%- assign temp_soc_link = 'soc_link_' | append: i -%}
            {%- assign _soc_icon = block.settings[temp_soc_icon] -%}

            {%- unless _soc_icon == blank -%}
                {%- assign _soc_link = block.settings[temp_soc_link] | default: 'javascript:void(0);' -%}

                <div class="social-icon-item">
                    <a href="{{_soc_link}}" class="social-icon">
                        {%- include 'icons', type: 'icon_free', name: _soc_icon -%}
                    </a>
                </div>
            {%- endunless -%}
        {%- endfor -%}
    </div>

    {%- assign _soc_color      = block.settings.soc_color | default: 'rgba(0,0,0,0)' -%}
    {%- assign _soc_bg_color   = block.settings.soc_bg_color | default: 'rgba(0,0,0,0)' -%}

    {%- capture block_css -%}
        {{- blockID}} a.social-icon{color: {{_soc_color}};}
        {%- unless _soc_bg_color == 'rgba(0,0,0,0)' -%}{{- blockID}} div.social-icon-item{background-color: {{_soc_bg_color}};}{%- endunless -%}
        {%- include 'css-responsive', classID: blockID, nextClassID: ' div.social-icon-item' ,css_value: block.settings.soc_padding -%}
        {%- include 'css-responsive', classID: blockID, nextClassID: ' div.social-icon-item' ,css_value: block.settings.soc_margin  ,css_property: 'margin' -%}
        {%- include 'css-responsive', classID: blockID, nextClassID: ' a.social-icon'        ,css_value: block.settings.soc_fs      ,css_property: 'font-size' -%}
        {%- include 'css-responsive', classID: blockID, nextClassID: ' div.social-icon-item' ,css_value: block.settings.soc_rd      ,css_property: 'border-radius' -%}
    {%- endcapture -%}
    {%- assign section_css = section_css | append: block_css -%} 
  
  {%- when 'banner' -%}
    {%- assign _img = block.settings.image -%}
    {%- capture block_css -%}
      {%- unless _img == blank -%}
        {{- blockID}}{background-image: url({{_img | img_url: 'master' }});background-size: cover;}
      {%- endunless -%}
      {%- include 'css-responsive', classID: blockID ,nextClassID: '' ,css_value: block.settings.height       ,css_property: 'min-height' -%}
      {%- include 'css-responsive', classID: blockID ,nextClassID: '' ,css_value: block.settings.bg_position  ,css_property: 'background-position' -%}
    {%- endcapture -%}
    {%- assign section_css = section_css | append: block_css -%}

{%- endcase -%}


{%- capture block_css -%}
  {%- include 'css-responsive', classID: blockID ,css_value: block.settings.block_margin , css_property: 'margin' -%}
  {%- include 'css-responsive', classID: blockID ,nextClassID: ' > div' ,css_value: block.settings.block_padding -%}
  {%- include 'css-responsive', classID: blockID ,nextClassID: ' > div' ,css_value: block.settings.alignment ,css_property: 'text-align' -%}
{%- endcapture -%}
{%- assign section_css = section_css | append: block_css -%}